name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-RC[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-SNAPSHOT"
      - "v[0-9]+.[0-9]+.[0-9]+-[0-9a-zA-Z]+-SNAPSHOT"
      - "v[0-9]+.[0-9]+.[0-9]+-[0-9a-zA-Z]+-[0-9a-zA-Z]+-SNAPSHOT"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous workflow runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Determine release type
        id: release-type
        run: |
          if [[ "${{ github.ref }}" == *"-SNAPSHOT"* ]]; then
            echo "TYPE=snapshot" >> $GITHUB_OUTPUT
            echo "NEEDS_SIGNING=false" >> $GITHUB_OUTPUT
          else
            echo "TYPE=production" >> $GITHUB_OUTPUT
            echo "NEEDS_SIGNING=true" >> $GITHUB_OUTPUT
          fi

      - name: Configure GPG (Production releases only)
        if: steps.release-type.outputs.NEEDS_SIGNING == 'true'
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode | gpg --import
          echo "default-cache-ttl 600" > ~/.gnupg/gpg-agent.conf
          echo "max-cache-ttl 7200" >> ~/.gnupg/gpg-agent.conf
          gpg-connect-agent reloadagent /bye

      - name: Decode & Generate Settings.xml file
        run: echo "${{ secrets.SETTINGS_XML }}" | base64 --decode > ~/.m2/settings.xml

      - name: Update pom.xml version
        run: |
          mvn versions:set -DnewVersion=${{ steps.version.outputs.VERSION }}
          mvn versions:commit

      - name: Run tests
        run: mvn clean test

      - name: Build and deploy to Maven Central
        run: mvn clean deploy --no-transfer-progress
        env:
          GPG_PASSPHRASE: ${{ steps.release-type.outputs.NEEDS_SIGNING == 'true' && secrets.GPG_PASSPHRASE || '' }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ steps.release-type.outputs.TYPE == 'snapshot' && format('Snapshot Release {0}', steps.version.outputs.VERSION) || format('Release {0}', steps.version.outputs.VERSION) }}
          draft: false
          prerelease: ${{ steps.release-type.outputs.TYPE == 'snapshot' || contains(github.ref, 'RC') || contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
